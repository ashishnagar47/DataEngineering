{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Mission100ashish30121998"
		},
		"ADLS_assignment1_LS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLS_assignment1_LS'"
		},
		"SQL_DB_assignment1_LS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SQL_DB_assignment1_LS'"
		},
		"ADLS_assignment1_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://ashish30121998adls.dfs.core.windows.net/"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://restcountries.com/v3.1/all"
		},
		"RestService2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://restcountries.com/v3.1/name/"
		},
		"SQL_DB_assignment1_LS_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "mission100ashish.database.windows.net"
		},
		"SQL_DB_assignment1_LS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Mission100ashish30121998DB"
		},
		"SQL_DB_assignment1_LS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ashish"
		},
		"trigger_India_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/359f4942-2038-4a06-80d2-21148f9e89dc/resourceGroups/Azurelib-Academy/providers/Microsoft.Storage/storageAccounts/ashish30121998adls"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/A10_Q1_REST_API')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Fetch Data from REST API",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestResource1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "IngestRESTAPIData",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource1')]",
				"[concat(variables('factoryId'), '/datasets/IngestRESTAPIData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/A10_Q2_REST_API')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@createArray('india','us','uk','china','russia')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Ingest REST API data Countrywise",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "IngestRESTAPICountrywiseData",
											"type": "DatasetReference",
											"parameters": {
												"countryName": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "RESTAPI_DS_Countrywise",
											"type": "DatasetReference",
											"parameters": {
												"countryName": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-04.northcentralus.logic.azure.com:443/workflows/d0d78f91009e41c28590f34fcf50c441/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=6Q885msOPFIW1VRVzGLmuqGOb4PBLqQNpS9Ag45r8V8",
							"body": {
								"Pipeline_Name": "REST_API_Countrywise_Data",
								"To_email": "ashish47nagar@gmail.com",
								"Status": "Failed"
							}
						}
					},
					{
						"name": "Web2",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-21.northcentralus.logic.azure.com:443/workflows/b2827be717de40858c49b3ca9fc344bf/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=JooCB-MhDastJ5592ZSiVkqrLKZVNurWX-qBAU_qtrE",
							"body": {
								"Pipeline_Name": "REST_API_Countrywise_Data",
								"Status": "Success",
								"Email": "ashish47nagar@gmail.com",
								"Name": "Ashish"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/IngestRESTAPICountrywiseData')]",
				"[concat(variables('factoryId'), '/datasets/RESTAPI_DS_Countrywise')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/A10_Q6_StorageTrigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/A7_Q4_Incremental_Pipeline_HWM_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Last ExecutionTime from HWM table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select * from saleslt.HWM",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Generic_Table_DS",
								"type": "DatasetReference",
								"parameters": {
									"schemaNameParam": "saleslt",
									"tableNameParam": "HWM"
								}
							}
						}
					},
					{
						"name": "Get Last Modified Time of Product table",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get Last ExecutionTime from HWM table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select max(ModifiedDate) as Last_Modified_Time from saleslt.product",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Generic_Table_DS",
								"type": "DatasetReference",
								"parameters": {
									"schemaNameParam": "saleslt",
									"tableNameParam": "product"
								}
							}
						}
					},
					{
						"name": "Ingest Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Last Modified Time of Product table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select * from saleslt.product where ModifiedDate> '@{activity('Get Last ExecutionTime from HWM table').output.firstRow.Last_Execution_Time}' and ModifiedDate <= '@{activity('Get Last Modified Time of Product table').output.firstRow.Last_Modified_Time}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Generic_Table_DS",
								"type": "DatasetReference",
								"parameters": {
									"schemaNameParam": "saleslt",
									"tableNameParam": "product"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Ingestion_Generic_Table_ADLS_DS",
								"type": "DatasetReference",
								"parameters": {
									"folderPathNameParam": "A7_Q4_Incremental Pipeline"
								}
							}
						]
					},
					{
						"name": "Update Execution Time",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Ingest Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Insert into saleslt.HWM(Last_Execution_Time)\nvalues ('@{activity('Get Last Modified Time of Product table').output.firstRow.Last_Modified_Time}')\n\nSelect * from saleslt.HWM\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Delete from saleslt.HWM\n",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Generic_Table_DS",
								"type": "DatasetReference",
								"parameters": {
									"schemaNameParam": "saleslt",
									"tableNameParam": "product"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Generic_Table_DS",
								"type": "DatasetReference",
								"parameters": {
									"schemaNameParam": "saleslt",
									"tableNameParam": "HWM"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_Table_DS')]",
				"[concat(variables('factoryId'), '/datasets/Ingestion_Generic_Table_ADLS_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/A7_Q5_Foreach_Example2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@createArray('product', 'customer')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Check if Item is Product",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item(),'product')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Ingest Product table",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": "Select * from saleslt.product where productID>100",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SQL_Generic_Table_DS",
														"type": "DatasetReference",
														"parameters": {
															"schemaNameParam": "saleslt",
															"tableNameParam": "customer"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "Ingestion_Generic_Table_ADLS_DS",
														"type": "DatasetReference",
														"parameters": {
															"folderPathNameParam": "A7_Q5"
														}
													}
												]
											}
										]
									}
								},
								{
									"name": "Check if item is Customer",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Check if Item is Product",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item(),'customer' )",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Ingest Customer table",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "Select * from saleslt.customer \nwhere customerID>100 and customerID<=1000",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SQL_Generic_Table_DS",
														"type": "DatasetReference",
														"parameters": {
															"schemaNameParam": "saleslt",
															"tableNameParam": "customer"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "Ingestion_Generic_Table_ADLS_DS",
														"type": "DatasetReference",
														"parameters": {
															"folderPathNameParam": "A7_Q5"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_Table_DS')]",
				"[concat(variables('factoryId'), '/datasets/Ingestion_Generic_Table_ADLS_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/A8_Q1_DataFlow_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ingest Customer table in SQL from ADLS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"customerFile": {},
									"ingestData": {
										"schemaNameParam": "saleslt",
										"tableNameParam": "dataFlowCustomer"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/A8_Q2_Join_Dataflow_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "JOIN customer and customer address table",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Join Customer and Customer address table",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"customerFile": {},
									"customerAddressFile": {},
									"ingestADLSfile": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Join Customer and Customer address table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/A8_Q3_JOIN_SQL_cust_ADLS_custAdd')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "JOIN SQL Cust and ADLS custAddress table",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"custTableSQL": {},
									"custAddressFromADLS": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ForEach_Loop_Example')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each Loop Example",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@createArray('Customer','CustomerAddress','Address','Product','ProductModel')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_Generic_Table_DS",
											"type": "DatasetReference",
											"parameters": {
												"schemaNameParam": "saleslt",
												"tableNameParam": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Ingestion_Generic_Table_ADLS_DS",
											"type": "DatasetReference",
											"parameters": {
												"folderPathNameParam": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_Table_DS')]",
				"[concat(variables('factoryId'), '/datasets/Ingestion_Generic_Table_ADLS_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Foreach_Example_2_A6Q3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Count custRows",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as custRows from saleslt.Customer",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Generic_Table_DS",
								"type": "DatasetReference",
								"parameters": {
									"schemaNameParam": "saleslt",
									"tableNameParam": "customer"
								}
							}
						}
					},
					{
						"name": "check if custRows greater than 100 or not",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Count custRows",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Count custRows').output.firstRow.custRows,100)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingest Customer data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": "truncate table saleslt.customer_copy",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_Generic_Table_DS",
											"type": "DatasetReference",
											"parameters": {
												"schemaNameParam": "saleslt",
												"tableNameParam": "customer"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_Generic_Table_DS",
											"type": "DatasetReference",
											"parameters": {
												"schemaNameParam": "saleslt",
												"tableNameParam": "customer_copy"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_Table_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Foreach_Example_A6Q2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ingest_Prod_and_Prod_Model_table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@createArray('Product','ProductModel')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_Generic_Table_DS",
											"type": "DatasetReference",
											"parameters": {
												"schemaNameParam": "saleslt",
												"tableNameParam": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Ingestion_Generic_Table_ADLS_DS",
											"type": "DatasetReference",
											"parameters": {
												"folderPathNameParam": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_Table_DS')]",
				"[concat(variables('factoryId'), '/datasets/Ingestion_Generic_Table_ADLS_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Foreach_Example_A7_Q2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ingest_cust_custAddress_ADLS",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@createArray('customer','customeraddress')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Ingest_cust_custAdd_ADLS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_Generic_Table_DS",
											"type": "DatasetReference",
											"parameters": {
												"schemaNameParam": "saleslt",
												"tableNameParam": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Ingestion_Generic_Table_ADLS_DS",
											"type": "DatasetReference",
											"parameters": {
												"folderPathNameParam": {
													"value": "Copy/@{formatDateTime(utcNow(),'yyyy')}-@{formatDateTime(utcNow(),'MM')}-@{formatDateTime(utcNow(),'dd')}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_Table_DS')]",
				"[concat(variables('factoryId'), '/datasets/Ingestion_Generic_Table_ADLS_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMetaData_Example_A7_Q1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "getMetaData_of_ADLS_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/getMetaData_of_ADLS_folder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Incremental_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Find Last Execution Date and time",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "HWM_file_DS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Find Last Modified Time",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Find Last Execution Date and time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select max(ModifiedDate) as Last_Modified_Date from saleslt.customer",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Generic_Table_DS",
								"type": "DatasetReference",
								"parameters": {
									"schemaNameParam": "saleslt",
									"tableNameParam": "customer"
								}
							}
						}
					},
					{
						"name": "Ingest data in Storage account",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Find Last Modified Time",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select * from saleslt.customer where ModifiedDate > '@{activity('Find Last Execution Date and time').output.firstRow.Prop_0}' and ModifiedDate <=  '@{activity('Find Last Modified Time').output.firstRow.Last_Modified_Date}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Generic_Table_DS",
								"type": "DatasetReference",
								"parameters": {
									"schemaNameParam": "saleslt",
									"tableNameParam": "customer"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Ingest_incrimental_data_ADLS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update HWM File",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Ingest data in Storage account",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select '@{activity('Find Last Modified Time').output.firstRow.Last_Modified_Date}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Generic_Table_DS",
								"type": "DatasetReference",
								"parameters": {
									"schemaNameParam": "saleslt",
									"tableNameParam": "customer"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "HWM_file_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HWM_file_DS')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_Table_DS')]",
				"[concat(variables('factoryId'), '/datasets/Ingest_incrimental_data_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_Add_table_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "count rows in address table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as addressRows from saleslt.address",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Copy_Address_Table_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Check if address rows greater than 100 or not",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "count rows in address table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('count rows in address table').output.firstRow.addressRows,100)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingest_Address_table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Copy_Address_Table_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Ingestion_Generic_Table_ADLS_DS",
											"type": "DatasetReference",
											"parameters": {
												"folderPathNameParam": "addresss"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Copy_Address_Table_DS')]",
				"[concat(variables('factoryId'), '/datasets/Ingestion_Generic_Table_ADLS_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_customerFile_in_customer_table_A7Q3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Check customer csv file present or not",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Check_Customer_file_present_or_not",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Check cust file present than save it in sql db",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check customer csv file present or not",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Check customer csv file present or not').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingest_cust_file_in_sql_db",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Check_Customer_file_present_or_not",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_Generic_Table_DS",
											"type": "DatasetReference",
											"parameters": {
												"schemaNameParam": "saleslt",
												"tableNameParam": "customer_metadata"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Check_Customer_file_present_or_not')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_Table_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_Address_Table_JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Address Table to ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Copy_Address_Table_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLS_Ingestion_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Copy_Address_Table_DS')]",
				"[concat(variables('factoryId'), '/datasets/ADLS_Ingestion_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_Customer_SQLDB_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy customer table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Copy_Cust_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ingest_cust_table_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Copy_Cust_table')]",
				"[concat(variables('factoryId'), '/datasets/ingest_cust_table_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_ProductModel_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Product Model table to ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Generic_Table_DS",
								"type": "DatasetReference",
								"parameters": {
									"schemaNameParam": "saleslt",
									"tableNameParam": "ProductModel"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Ingestion_Generic_Table_ADLS_DS",
								"type": "DatasetReference",
								"parameters": {
									"folderPathNameParam": "Product Model"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_Table_DS')]",
				"[concat(variables('factoryId'), '/datasets/Ingestion_Generic_Table_ADLS_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_Product_Addres_To_JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Count no of rows in product table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as productRows from saleslt.product",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Copy_product_table_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Check if rows in product is greater than 10 or not",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Count no of rows in product table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Count no of rows in product table').output.firstRow.productRows,10)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingest_Product_Table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Copy_product_table_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Ingest_Product_table_ADLS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Ingest_Product_Table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Ingest_Add_table_ADLS",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Copy_product_table_DS')]",
				"[concat(variables('factoryId'), '/datasets/Ingest_Product_table_ADLS')]",
				"[concat(variables('factoryId'), '/pipelines/Ingest_Add_table_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_Product_To_JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Count_Product_table",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as Count from SalesLT.Product",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Copy_product_table_DS",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Check if count of product is greater than 10 or not",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Count_Product_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('Count_Product_table').output.firstRow.Count,10)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Ingest_Product_table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Copy_product_table_DS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Ingest_Product_table_ADLS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Copy_product_table_DS')]",
				"[concat(variables('factoryId'), '/datasets/Ingest_Product_table_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCD_Type1_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Ingest_SCD1_File",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Generic_Table_DS",
								"type": "DatasetReference",
								"parameters": {
									"schemaNameParam": "saleslt",
									"tableNameParam": "SCDType1"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ingest_SCD1_File')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_Table_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCD_Type_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SCD Type 2 Pipeline",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow3",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"UserSQLData": {},
									"UserADLSData": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCD_Type_3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SCD Type 3",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow4",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"UserFileADLS": {},
									"UserDatabaseSQL": {},
									"sink1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Without_Foreach_Example_A6Q1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ingest_customer_table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Generic_Table_DS",
								"type": "DatasetReference",
								"parameters": {
									"schemaNameParam": "saleslt",
									"tableNameParam": "customer"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Ingestion_Generic_Table_ADLS_DS",
								"type": "DatasetReference",
								"parameters": {
									"folderPathNameParam": "customer"
								}
							}
						]
					},
					{
						"name": "Ingest_customer_address_table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Ingest_customer_table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_Generic_Table_DS",
								"type": "DatasetReference",
								"parameters": {
									"schemaNameParam": "saleslt",
									"tableNameParam": "customeraddress"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Ingestion_Generic_Table_ADLS_DS",
								"type": "DatasetReference",
								"parameters": {
									"folderPathNameParam": "custaddress"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_Table_DS')]",
				"[concat(variables('factoryId'), '/datasets/Ingestion_Generic_Table_ADLS_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/check_thresValue_ingest_custTable_A6Q6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Check threshold value",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Threshold_file_DS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "check cust rows greater than threshold",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Check threshold value",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "count_cust_table_rows",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('count_cust_table_rows').output.firstRow.custRows, int(activity('Check threshold value').output.firstRow.Prop_0))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Copy_Cust_table",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ingest_cust_table_adls",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "count_cust_table_rows",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as custRows from SalesLT.Customer",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Copy_Cust_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Threshold_file_DS')]",
				"[concat(variables('factoryId'), '/datasets/Copy_Cust_table')]",
				"[concat(variables('factoryId'), '/datasets/ingest_cust_table_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_Ingestion_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "landing"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"CustomerID": {
							"type": "integer"
						},
						"NameStyle": {
							"type": "boolean"
						},
						"Title": {
							"type": "string"
						},
						"FirstName": {
							"type": "string"
						},
						"MiddleName": {
							"type": "string"
						},
						"LastName": {
							"type": "string"
						},
						"Suffix": {
							"type": "string"
						},
						"CompanyName": {
							"type": "string"
						},
						"SalesPerson": {
							"type": "string"
						},
						"EmailAddress": {
							"type": "string"
						},
						"Phone": {
							"type": "string"
						},
						"PasswordHash": {
							"type": "string"
						},
						"PasswordSalt": {
							"type": "string"
						},
						"rowguid": {
							"type": "string"
						},
						"ModifiedDate": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Check_Customer_file_present_or_not')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "saleslt.customer.txt",
						"folderPath": "Customer",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "NameStyle",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "MiddleName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Suffix",
						"type": "String"
					},
					{
						"name": "CompanyName",
						"type": "String"
					},
					{
						"name": "SalesPerson",
						"type": "String"
					},
					{
						"name": "EmailAddress",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "PasswordHash",
						"type": "String"
					},
					{
						"name": "PasswordSalt",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Address_Table_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_DB_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Address"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_DB_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Cust_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_DB_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "CompanyName",
						"type": "nvarchar"
					},
					{
						"name": "SalesPerson",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "Phone",
						"type": "nvarchar"
					},
					{
						"name": "PasswordHash",
						"type": "varchar"
					},
					{
						"name": "PasswordSalt",
						"type": "varchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "saleslt",
					"table": "customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_DB_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_product_table_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_DB_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Product"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_DB_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataflow_Join_Tables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "landing"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"ProductID": {
							"type": "integer"
						},
						"Name": {
							"type": "string"
						},
						"ProductNumber": {
							"type": "string"
						},
						"Color": {
							"type": "string"
						},
						"StandardCost": {
							"type": "number"
						},
						"ListPrice": {
							"type": "number"
						},
						"Size": {
							"type": "string"
						},
						"Weight": {
							"type": "number"
						},
						"ProductCategoryID": {
							"type": "integer"
						},
						"ProductModelID": {
							"type": "integer"
						},
						"SellStartDate": {
							"type": "string"
						},
						"SellEndDate": {
							"type": "string"
						},
						"DiscontinuedDate": {
							"type": "null"
						},
						"ThumbNailPhoto": {
							"type": "string"
						},
						"ThumbnailPhotoFileName": {
							"type": "string"
						},
						"rowguid": {
							"type": "string"
						},
						"ModifiedDate": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "A8_Q3",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "product P3",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HWM_file_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "HWM.txt",
						"folderPath": "Incremental Pipeline",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IngestRESTAPICountrywiseData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService2",
					"type": "LinkedServiceReference",
					"parameters": {}
				},
				"parameters": {
					"countryName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().countryName",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IngestRESTAPIData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "landing"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "INT32"
					},
					{
						"name": "NameStyle",
						"type": "BOOLEAN"
					},
					{
						"name": "Title",
						"type": "UTF8"
					},
					{
						"name": "FirstName",
						"type": "UTF8"
					},
					{
						"name": "MiddleName",
						"type": "UTF8"
					},
					{
						"name": "LastName",
						"type": "UTF8"
					},
					{
						"name": "Suffix",
						"type": "UTF8"
					},
					{
						"name": "CompanyName",
						"type": "UTF8"
					},
					{
						"name": "SalesPerson",
						"type": "UTF8"
					},
					{
						"name": "EmailAddress",
						"type": "UTF8"
					},
					{
						"name": "Phone",
						"type": "UTF8"
					},
					{
						"name": "PasswordHash",
						"type": "UTF8"
					},
					{
						"name": "PasswordSalt",
						"type": "UTF8"
					},
					{
						"name": "rowguid",
						"type": "UTF8"
					},
					{
						"name": "ModifiedDate",
						"type": "INT96"
					},
					{
						"name": "AddressID",
						"type": "INT_16"
					},
					{
						"name": "AddressType",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_Product_table_ADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "landing"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_SCD1_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SCDType1.txt",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Cname",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_SCD_Type2_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SCDType2.txt",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "CName",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_SCD_Type3_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_DB_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UserName",
						"type": "varchar"
					},
					{
						"name": "Current_City",
						"type": "varchar"
					},
					{
						"name": "Previous_City_1",
						"type": "varchar"
					},
					{
						"name": "Previous_City_2",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "SCDType3"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_DB_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_cust_address_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesLT.CustomerAddress-nnCI751651 (1)-0A4ckSV5gM.txt",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "AddressID",
						"type": "String"
					},
					{
						"name": "AddressType",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_customer_file_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SalesLT.Customer-xRyuaEu2p7-WdCbzuWlIo.txt",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "NameStyle",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "MiddleName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Suffix",
						"type": "String"
					},
					{
						"name": "CompanyName",
						"type": "String"
					},
					{
						"name": "SalesPerson",
						"type": "String"
					},
					{
						"name": "EmailAddress",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "PasswordHash",
						"type": "String"
					},
					{
						"name": "PasswordSalt",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingest_incrimental_data_ADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Incremental Pipeline",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion_Generic_Table_ADLS_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPathNameParam": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folderPathNameParam",
							"type": "Expression"
						},
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "india",
						"folderPath": "REST API",
						"fileSystem": "landing"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"name": {
							"type": "object",
							"properties": {
								"common": {
									"type": "string"
								},
								"official": {
									"type": "string"
								},
								"nativeName": {
									"type": "object",
									"properties": {
										"eng": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"hin": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										},
										"tam": {
											"type": "object",
											"properties": {
												"official": {
													"type": "string"
												},
												"common": {
													"type": "string"
												}
											}
										}
									}
								}
							}
						},
						"tld": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"cca2": {
							"type": "string"
						},
						"ccn3": {
							"type": "string"
						},
						"cca3": {
							"type": "string"
						},
						"cioc": {
							"type": "string"
						},
						"independent": {
							"type": "boolean"
						},
						"status": {
							"type": "string"
						},
						"unMember": {
							"type": "boolean"
						},
						"currencies": {
							"type": "object",
							"properties": {
								"INR": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								},
								"USD": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										},
										"symbol": {
											"type": "string"
										}
									}
								}
							}
						},
						"idd": {
							"type": "object",
							"properties": {
								"root": {
									"type": "string"
								},
								"suffixes": {
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						},
						"capital": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"altSpellings": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"region": {
							"type": "string"
						},
						"subregion": {
							"type": "string"
						},
						"languages": {
							"type": "object",
							"properties": {
								"eng": {
									"type": "string"
								},
								"hin": {
									"type": "string"
								},
								"tam": {
									"type": "string"
								}
							}
						},
						"translations": {
							"type": "object",
							"properties": {
								"ara": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"bre": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"ces": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"cym": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"deu": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"est": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"fin": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"fra": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"hrv": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"hun": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"ita": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"jpn": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"kor": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"nld": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"per": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"pol": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"por": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"rus": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"slk": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"spa": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"srp": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"swe": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"tur": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"urd": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								},
								"zho": {
									"type": "object",
									"properties": {
										"official": {
											"type": "string"
										},
										"common": {
											"type": "string"
										}
									}
								}
							}
						},
						"latlng": {
							"type": "array",
							"items": {
								"type": "number"
							}
						},
						"landlocked": {
							"type": "boolean"
						},
						"borders": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"area": {
							"type": "number"
						},
						"demonyms": {
							"type": "object",
							"properties": {
								"eng": {
									"type": "object",
									"properties": {
										"f": {
											"type": "string"
										},
										"m": {
											"type": "string"
										}
									}
								},
								"fra": {
									"type": "object",
									"properties": {
										"f": {
											"type": "string"
										},
										"m": {
											"type": "string"
										}
									}
								}
							}
						},
						"flag": {
							"type": "string"
						},
						"maps": {
							"type": "object",
							"properties": {
								"googleMaps": {
									"type": "string"
								},
								"openStreetMaps": {
									"type": "string"
								}
							}
						},
						"population": {
							"type": "integer"
						},
						"gini": {
							"type": "object",
							"properties": {
								"2011": {
									"type": "number"
								}
							}
						},
						"fifa": {
							"type": "string"
						},
						"car": {
							"type": "object",
							"properties": {
								"signs": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"side": {
									"type": "string"
								}
							}
						},
						"timezones": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"continents": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"flags": {
							"type": "object",
							"properties": {
								"png": {
									"type": "string"
								},
								"svg": {
									"type": "string"
								},
								"alt": {
									"type": "string"
								}
							}
						},
						"coatOfArms": {
							"type": "object",
							"properties": {
								"png": {
									"type": "string"
								},
								"svg": {
									"type": "string"
								}
							}
						},
						"startOfWeek": {
							"type": "string"
						},
						"capitalInfo": {
							"type": "object",
							"properties": {
								"latlng": {
									"type": "array",
									"items": {
										"type": "number"
									}
								}
							}
						},
						"postalCode": {
							"type": "object",
							"properties": {
								"format": {
									"type": "string"
								},
								"regex": {
									"type": "string"
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "A8_Q3",
						"fileSystem": "landing"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RESTAPI_DS_Countrywise')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"countryName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().countryName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('REST_API ',dataset().countryName)",
							"type": "Expression"
						},
						"fileSystem": "landing"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCD_Type_3_ADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SCDType3.txt",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "UserName",
						"type": "String"
					},
					{
						"name": "Current_City",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Generic_Table_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_DB_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schemaNameParam": {
						"type": "string"
					},
					"tableNameParam": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schemaNameParam",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tableNameParam",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_DB_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Threshold_file_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Threshold-TwcFV4QAZU.txt",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "250",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/User_SQL_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQL_DB_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Cname",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					},
					{
						"name": "Active_Flag",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "SCDType2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQL_DB_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/getMetaData_of_ADLS_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingest_cust_table_adls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLS_assignment1_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_assignment1_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLS_assignment1_LS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLS_assignment1_LS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService2_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_DB_assignment1_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SQL_DB_assignment1_LS_properties_typeProperties_server')]",
					"database": "[parameters('SQL_DB_assignment1_LS_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('SQL_DB_assignment1_LS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SQL_DB_assignment1_LS_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerRunsTwiceADay')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "A10_Q2_REST_API",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 12,
						"startTime": "2024-09-12T12:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/A10_Q2_REST_API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger_India')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "A10_Q6_StorageTrigger",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/landing/blobs/REST API/india",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger_India_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/A10_Q6_StorageTrigger')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Join Customer and Customer address table')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Ingest_customer_file_DS",
								"type": "DatasetReference"
							},
							"name": "customerFile"
						},
						{
							"dataset": {
								"referenceName": "Ingest_cust_address_file",
								"type": "DatasetReference"
							},
							"name": "customerAddressFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Dataflow_Join_Tables",
								"type": "DatasetReference"
							},
							"name": "ingestADLSfile",
							"rejectedDataLinkedService": {
								"referenceName": "ADLS_assignment1_LS",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "join1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerID as short,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> customerFile",
						"source(output(",
						"          CustomerID as short,",
						"          AddressID as short,",
						"          AddressType as string,",
						"          rowguid as string,",
						"          ModifiedDate as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> customerAddressFile",
						"customerFile, customerAddressFile join(customerFile@CustomerID == customerAddressFile@CustomerID,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ProductID as integer,",
						"          Name as string,",
						"          ProductNumber as string,",
						"          Color as string,",
						"          StandardCost as double,",
						"          ListPrice as double,",
						"          Size as string,",
						"          Weight as double,",
						"          ProductCategoryID as integer,",
						"          ProductModelID as integer,",
						"          SellStartDate as string,",
						"          SellEndDate as string,",
						"          DiscontinuedDate as string,",
						"          ThumbNailPhoto as string,",
						"          ThumbnailPhotoFileName as string,",
						"          rowguid as string,",
						"          ModifiedDate as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ingestADLSfile"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ingest_customer_file_DS')]",
				"[concat(variables('factoryId'), '/datasets/Ingest_cust_address_file')]",
				"[concat(variables('factoryId'), '/datasets/Dataflow_Join_Tables')]",
				"[concat(variables('factoryId'), '/linkedServices/ADLS_assignment1_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Ingest_customer_file_DS",
								"type": "DatasetReference"
							},
							"name": "customerFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQL_Generic_Table_DS",
								"type": "DatasetReference"
							},
							"name": "ingestData"
						}
					],
					"transformations": [
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerID as short,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> customerFile",
						"customerFile filter(CustomerID%2==0) ~> filter1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ingestData"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ingest_customer_file_DS')]",
				"[concat(variables('factoryId'), '/datasets/SQL_Generic_Table_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Copy_Cust_table",
								"type": "DatasetReference"
							},
							"name": "custTableSQL"
						},
						{
							"dataset": {
								"referenceName": "Ingest_cust_address_file",
								"type": "DatasetReference"
							},
							"name": "custAddressFromADLS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "select1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerID as integer,",
						"          NameStyle as boolean,",
						"          Title as string,",
						"          FirstName as string,",
						"          MiddleName as string,",
						"          LastName as string,",
						"          Suffix as string,",
						"          CompanyName as string,",
						"          SalesPerson as string,",
						"          EmailAddress as string,",
						"          Phone as string,",
						"          PasswordHash as string,",
						"          PasswordSalt as string,",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> custTableSQL",
						"source(output(",
						"          CustomerID as integer,",
						"          AddressID as short,",
						"          AddressType as string,",
						"          rowguid as string,",
						"          ModifiedDate as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> custAddressFromADLS",
						"custTableSQL, custAddressFromADLS join(custTableSQL@CustomerID == custAddressFromADLS@CustomerID,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          CustomerID = custTableSQL@CustomerID,",
						"          NameStyle,",
						"          Title,",
						"          FirstName,",
						"          MiddleName,",
						"          LastName,",
						"          Suffix,",
						"          CompanyName,",
						"          SalesPerson,",
						"          EmailAddress,",
						"          Phone,",
						"          PasswordHash,",
						"          PasswordSalt,",
						"          rowguid = custTableSQL@rowguid,",
						"          ModifiedDate = custTableSQL@ModifiedDate,",
						"          CustomerID = custAddressFromADLS@CustomerID,",
						"          AddressID,",
						"          AddressType,",
						"          rowguid = custAddressFromADLS@rowguid,",
						"          ModifiedDate = custAddressFromADLS@ModifiedDate",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 filter(CustomerID>1000 && CustomerID<2000) ~> filter1",
						"filter1 sort(asc(CustomerID, true),",
						"     caseInsensitive: true) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Copy_Cust_table')]",
				"[concat(variables('factoryId'), '/datasets/Ingest_cust_address_file')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "User_SQL_Data",
								"type": "DatasetReference"
							},
							"name": "UserSQLData"
						},
						{
							"dataset": {
								"referenceName": "Ingest_SCD_Type2_File",
								"type": "DatasetReference"
							},
							"name": "UserADLSData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "User_SQL_Data",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "User_SQL_Data",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "join1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						},
						{
							"name": "select2"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "select3"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          Cname as string,",
						"          City as string,",
						"          Active_Flag as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> UserSQLData",
						"source(output(",
						"          ID as short,",
						"          CName as string,",
						"          City as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> UserADLSData",
						"UserSQLData select(mapColumn(",
						"          DB_ID = ID,",
						"          DB_Cname = Cname,",
						"          DB_City = City,",
						"          DB_Active_Flag = Active_Flag",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"UserADLSData, select1 join(ID == DB_ID,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 filter(!isNull(DB_ID)) ~> filter1",
						"filter1 derive(active_flag = 0) ~> derivedColumn1",
						"select2 alterRow(upsertIf(1==1)) ~> alterRow1",
						"derivedColumn1 select(mapColumn(",
						"          ID,",
						"          Active_Flag = active_flag",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"UserADLSData derive(Active_Flag = 1) ~> derivedColumn2",
						"derivedColumn2 select(mapColumn(",
						"          ID,",
						"          Cname = CName,",
						"          City,",
						"          Active_Flag",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select3",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Cname as string,",
						"          City as string,",
						"          Active_Flag as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
						"select3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          Cname as string,",
						"          City as string,",
						"          Active_Flag as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/User_SQL_Data')]",
				"[concat(variables('factoryId'), '/datasets/Ingest_SCD_Type2_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow4')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SCD_Type_3_ADLS",
								"type": "DatasetReference"
							},
							"name": "UserFileADLS"
						},
						{
							"dataset": {
								"referenceName": "Ingest_SCD_Type3_SQL",
								"type": "DatasetReference"
							},
							"name": "UserDatabaseSQL"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Ingest_SCD_Type3_SQL",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "Ingest_SCD_Type3_SQL",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "filter2"
						},
						{
							"name": "join1"
						},
						{
							"name": "select2"
						},
						{
							"name": "alterRow1"
						},
						{
							"name": "split1"
						},
						{
							"name": "filter3"
						},
						{
							"name": "select3"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as short,",
						"          UserName as string,",
						"          Current_City as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> UserFileADLS",
						"source(output(",
						"          ID as integer,",
						"          UserName as string,",
						"          Current_City as string,",
						"          Previous_City_1 as string,",
						"          Previous_City_2 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> UserDatabaseSQL",
						"UserDatabaseSQL select(mapColumn(",
						"          DB_ID = ID,",
						"          DB_UserName = UserName,",
						"          DB_Current_City = Current_City,",
						"          DB_Previous_City_1 = Previous_City_1,",
						"          DB_Previous_City_2 = Previous_City_2",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"split1@IDisNotNULL filter(!isNull(DB_ID)) ~> filter2",
						"UserFileADLS, select1 join(ID == DB_ID,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"filter2 select(mapColumn(",
						"          ID,",
						"          UserName,",
						"          Current_City,",
						"          Previous_City_1 = DB_Current_City,",
						"          Previous_City_2 = DB_Previous_City_1",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select2 alterRow(upsertIf(1==1)) ~> alterRow1",
						"join1 split(!isNull(DB_ID),",
						"     disjoint: false) ~> split1@(IDisNotNULL, IDisNULL)",
						"split1@IDisNULL filter(isNull(DB_ID)) ~> filter3",
						"filter3 select(mapColumn(",
						"          ID,",
						"          UserName,",
						"          Current_City",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select3",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          UserName as string,",
						"          Current_City as string,",
						"          Previous_City_1 as string,",
						"          Previous_City_2 as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
						"select3 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID as integer,",
						"          UserName as string,",
						"          Current_City as string,",
						"          Previous_City_1 as string,",
						"          Previous_City_2 as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink2"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SCD_Type_3_ADLS')]",
				"[concat(variables('factoryId'), '/datasets/Ingest_SCD_Type3_SQL')]"
			]
		}
	]
}